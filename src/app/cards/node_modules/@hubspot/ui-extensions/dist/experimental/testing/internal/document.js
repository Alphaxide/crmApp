import { act as reactAct } from 'react';
import { InvalidComponentsError } from './errors';
/**
 * Creates a rendered document.
 *
 * @param options Options for creating the document.
 * @returns A rendered document.
 */
export const createDocument = (options) => {
    const { getLatestRootNode } = options;
    const invalidComponentNames = new Set();
    const document = {
        rootNode: null,
        batchUpdate: (run) => {
            reactAct(run);
            const latestRootNode = getLatestRootNode();
            if (latestRootNode.document.hasInvalidComponentNames()) {
                throw new InvalidComponentsError(latestRootNode);
            }
        },
        addInvalidComponentName: (name) => {
            invalidComponentNames.add(name);
        },
        getInvalidComponentNames: () => {
            if (invalidComponentNames.size === 0) {
                return [];
            }
            const invalidComponentNamesArray = [...invalidComponentNames];
            invalidComponentNamesArray.sort();
            return invalidComponentNamesArray;
        },
        hasInvalidComponentNames: () => {
            return invalidComponentNames.size > 0;
        },
    };
    return document;
};
